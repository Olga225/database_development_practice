Поставленная задача:

Имеются таблицы
А (STRART_INT, END_INT, CODE) и
B (STRART_INT_NEW, END_INT_NEW, CODE_NEW),
содержащие информацию об интервалах:
STRART_INT, STRART_INT_NEW - начало интервала (целое число); 
END_INT, END_INT_NEW - конец интервала (целое число); 
CODE - код интервала.
Известно, что все интервалы таблицы В входят в интервалы таблицы А. 
Информация о таблицах хранится в файлах. Имена файлов – параметры.
Необходимо создать программу, которая будет обновлять информацию в таблице А в 
соответствии с таблицей В, т.е. разбивать интервалы в таблице А и обновлять код интервала. На тех участках, для которых нет соответствия в таблице В, код должен оставаться прежним. Границы интервалов не должны пересекаться

Объяснение алгоритма работы кода:

Создается две таблицы, A и B, в соответствии с условием задачи.
Создается пакет. Он имеет всего одну публичную процедуру, которая принимает на вход строковые параметры файлов, 
Приватные процедуры, типы и переменные: 
1.	 Вспомогательные таблицы, которая хранит информацию из начальных таблиц, а также номера строк и булевую переменную, следящую за тем, что все интервалы учтены.
2.	Результирующая таблица, хранящая в себе результат, которые после будет записан в A.
3.	Вспомогательная коллекция для хранения номеров выбранных строк.
4.	Переменные, следящие за тем, какой последний интервал B был рассмотрен, а также за последним числом, добавленным в таблицу.
5.	Процедура, заполняющая вспомогательные таблицы. По умолчанию булевая переменная имеет значение ложь. Строки отсортированы по START_INT и START_INT_NEW.
6.	Функция, которая для номера интервала A находит все интервалы B, попадающие в него, и возвращает список нужных номеров.
7.	Функция, проверяющая, совпадает ли START_INT_NEW интервала B с последним добавленным числом. Это позволяет понять, надо ли добавить интервал B или промежуток между концом прошлого интервала и его началом.
8.	Основная процедура, которая последовательно перебирает все интервалы A, находит попадающие в них интервалы B и на основе параметров попадания (пункт 7) осуществляет вставку строк в результирующую таблицу. В конце добавляет нерассмотренные интервалы A (интервалы, в которые не попал ни один интервал из B) и добавляет их.  
9.	Процедура, которая считывает информацию из файлов и заносит данные в таблицы.
На основе пунктов 8 и 9 составляется публичная процедура, которая осуществляет вставку строк результирующей таблицы в таблицу  A.
